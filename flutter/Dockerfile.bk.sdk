# Environemnt to install flutter and build web
#FROM debian:latest AS build-env
FROM base.frotel.com/base/debian:bookworm-slim AS build-env
#FROM base.frotel.com/base/ubuntu:18.04 AS build-env

# install all needed stuff
RUN apt-get update
RUN apt-get install -y curl git unzip curl git unzip xz-utils zip libglu1-mesa openjdk-17-jdk wget
# define variables
ARG FLUTTER_SDK=/usr/local/flutter
ARG FLUTTER_VERSION=3.10.5
ARG APP=/app/

# Prepare Android directories and system variables
RUN mkdir -p /root/android/sdk
ENV ANDROID_SDK_ROOT /root/android/sdk
RUN mkdir -p /root/.android && touch /root/.android/repositories.cfg
   
# Set up Android SDK
RUN wget -O sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
RUN unzip sdk-tools.zip && rm sdk-tools.zip
RUN mv tools /root/android/sdk/tools

#COPY ./tools Android/sdk/tools
#RUN chown -R developer:developer Android/sdk/tools
#RUN chmod +x Android/sdk/tools/bin/sdkmanager

RUN ls -llh /root/android/sdk/tools/bin
RUN cd /root/android/sdk/tools/bin && yes | ./sdkmanager --licenses
RUN cd /root/android/sdk/tools/bin && ./sdkmanager "build-tools;33.0.1" "patcher;v4" "platform-tools" "platforms;android-33" "sources;android-33"
ENV PATH "$PATH:/root/android/sdk/platform-tools"

#clone flutter
RUN git clone https://github.com/flutter/flutter.git $FLUTTER_SDK
# change dir to current flutter folder and make a checkout to the specific version
RUN cd $FLUTTER_SDK && git fetch && git checkout $FLUTTER_VERSION

# setup the flutter path as an enviromental variable
ENV PATH="$FLUTTER_SDK/bin:$FLUTTER_SDK/bin/cache/dart-sdk/bin:${PATH}"

# Start to run Flutter commands
# doctor to see if all was installes ok
RUN flutter doctor -v

# create folder to copy source code
RUN mkdir $APP
# copy source code to folder
COPY . $APP
# stup new folder as the working directory
WORKDIR $APP

# Run build: 1 - clean, 2 - pub get, 3 - build web
RUN flutter clean
RUN flutter pub get
#RUN flutter build web
RUN flutter build apk --release --split-per-abi --no-tree-shake-icons
# once heare the app will be compiled and ready to deploy

# use nginx to deploy
FROM base.frotel.com/base/nginx:1.25.2-alpine

# copy the info of the builded web app to nginx
COPY --from=build-env /app/build/web /usr/share/nginx/html

# Expose and run nginx
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
