#!/bin/sh

PATCH=""
package="com/atlassian/extras/decoder/v2"
class="Version2LicenseDecoder"

jar tf $1 | grep "$package/${class}.class" >/dev/null
if [ $? -ne 0 ]; then
	echo "No $class class in jar file"
	exit 1
fi;

set -e
build=`mktemp -d`
mkdir -p $build/$package

echo $PATCH | base64 -d >$build/$package/${class}.class

jar uf $1 -C $build $package/${class}.class
echo "OK"
rm -rf $build

